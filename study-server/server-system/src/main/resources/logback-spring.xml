<?xml version="1.0" encoding="UTF-8"?>
<!--
    scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
　　 scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
 -->
<configuration scan="false" scanPeriod="30 seconds" debug="false">
    <springProperty scope="context" name="appName" source="spring.application.name" defaultValue=""/>

    <!--日志文件存储路径-->
    <property name="logDir" value="${user.home}/logs/study"/>
    <!--RollingFile 文件名称-->
    <property name="rollingFileName" value="system-%d{yyyy-MM-dd}-%i.log"/>
    <!--RollingFile 按月归档-->
    <property name="rollingFilePattern" value="${logDir}/%d{yyyy-MM}/system-%d{yyyy-MM-dd}-%i.log.gz"/>

    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

    <!--控制台输出格式-->
    <property name="consolePatternLayout" value="${CONSOLE_LOG_PATTERN:-%clr(%d{HH:mm:ss}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr([%t]){faint} %clr(%-40.40logger{39}){cyan} %clr(: %L){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <!--RollingFile 输出格式-->
    <property name="filePatternLayout" value="%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } [%t] %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

    <!--RollingFile 单文件分隔大小-->
    <property name="fileSize" value="50MB"/>
    <!--RollingFile 存放数量，默认7个-->
    <property name="fileMax" value="30"/>
    <!--RollingFile 文件存储限值,超出后从前往后删除-->
    <property name="fileTotalSize" value="1GB"/>

    <!--控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${consolePatternLayout}</pattern>
        </encoder>
    </appender>

    <!--RollingFile auth-->
    <appender name="rollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- rollover daily -->
            <fileNamePattern>${rollingFilePattern}</fileNamePattern>
            <!--每天产生至少产生一个归档，或者文件大小超过设定值产生多个归档-->
            <maxFileSize>${fileSize}</maxFileSize>
            <!--同类型日志文件同一文件夹下可以存放数量，默认为7个-->
            <maxHistory>${fileMax}</maxHistory>
            <totalSizeCap>${fileTotalSize}</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <charset>UTF-8</charset>
            <pattern>${filePatternLayout}</pattern>
        </encoder>
    </appender>

    <!-- graylog https://github.com/osiegmar/logback-gelf/blob/master/examples/advanced_udp.xml -->
    <appender name="graylog" class="de.siegmar.logbackgelf.GelfUdpAppender">
        <graylogHost>127.0.0.1</graylogHost>
        <graylogPort>12201</graylogPort>
        <!--以下为可选配置-->
        <maxChunkSize>508</maxChunkSize>
        <useCompression>true</useCompression>

        <encoder class="de.siegmar.logbackgelf.GelfEncoder">
            <staticField>app_name:${appName}</staticField>
        </encoder>
    </appender>

    <!--默认日志级别-->
    <Root level="DEBUG">
        <appender-ref ref="console"/>
        <appender-ref ref="rollingFile"/>
        <appender-ref ref="graylog"/>
    </Root>

</configuration>