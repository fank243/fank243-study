<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.fank243.study</groupId>
    <artifactId>fank243-study</artifactId>
    <version>1.0.0</version>
    <modules>
        <module>study-infrastructure</module>
        <module>study-gateway</module>
        <module>study-core</module>
        <module>study-server</module>
        <module>study-api</module>
        <module>study-adapter</module>
    </modules>
    <packaging>pom</packaging>

    <name>fank243-study</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies -->
        <spring-boot.version>2.5.2</spring-boot.version>
        <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies -->
        <spring-cloud.version>2020.0.3</spring-cloud.version>
        <!--https://maven.aliyun.com/mvn/search -->
        <spring-cloud-alibaba.version>2021.1</spring-cloud-alibaba.version>
        <fank243-dependencies.version>1.0.1</fank243-dependencies.version>

        <sentinel.version>1.8.2</sentinel.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.fank243.maven</groupId>
                <artifactId>fank243-dependencies</artifactId>
                <version>${fank243-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.fank243.study</groupId>
                <artifactId>study-netty</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fank243.study</groupId>
                <artifactId>study-sentinel</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fank243.study</groupId>
                <artifactId>study-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fank243.study</groupId>
                <artifactId>study-ds</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fank243.study</groupId>
                <artifactId>study-api</artifactId>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.shalousun</groupId>
                    <artifactId>smart-doc-maven-plugin</artifactId>
                </plugin>
                <!-- 基于maven-jar-plugin插件实现把依赖jar定义写入输出jar的META-INFO/MANIFEST文件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <classpathPrefix>lib/</classpathPrefix>
                                <useUniqueVersions>false</useUniqueVersions>
                            </manifest>
                           <!-- <manifestEntries>
                                &lt;!&ndash;
                                有些非官方三方的诸如sdk jar在pom中是以systemPath方式引入的，maven-jar-plugin组件没有直接参数声明包含指定scope的组件
                                通过使用额外定义 Class-Path 值来追加指定依赖组件列表，在子模块按实际情况指定 jar-manifestEntries-classpath 值即可
                                例如(注意前面个点字符及各空格分隔符)：. lib/xxx-1.0.0.jar lib/yyy-2.0.0.jar
                                详见各子模块中 boot-jar-output 属性定义示例
                                &ndash;&gt;
                                <Class-Path>${jar-manifestEntries-classpath}</Class-Path>
                            </manifestEntries>-->
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-dependencies</id>
                            <phase>package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <!--
                                各子模块按照实际层级定义各模块对应的属性值，检查所有微服务模块依赖jar文件合并复制到同一个目录
                                详见各子模块中 boot-jar-output 属性定义
                                -->
                                <outputDirectory>${boot-jar-output}/lib</outputDirectory>
                                <excludeTransitive>false</excludeTransitive>
                                <stripVersion>false</stripVersion>
                                <silent>false</silent>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <configuration>
                        <!--表示编译版本配置有效-->
                        <fork>true</fork>
                        <!--引入项目引用的第三方jar-->
                        <includeSystemScope>true</includeSystemScope>
                        <layout>ZIP</layout>
                        <outputDirectory>${boot-jar-output}</outputDirectory>
                        <!--排除第三方jar文件-->
                        <includes>
                            <include>
                                <groupId>nothing</groupId>
                                <artifactId>nothing</artifactId>
                            </include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <!--自建仓库-->
    <repositories>
        <repository>
            <id>github</id>
            <name>GitHub Maven Packages</name>
            <url>https://maven.pkg.github.com/fank243/mvn-repo</url>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </releases>
        </repository>
    </repositories>
</project>
